// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MigrationsDao is the data access object for table migrations.
type MigrationsDao struct {
	Table   string            // Table is the underlying table name of the DAO.
	Group   string            // Group is the database configuration group name of current DAO.
	Columns MigrationsColumns // Columns contains all the column names of Table for convenient usage.
}

// MigrationsColumns defines and stores column names for table migrations.
type MigrationsColumns struct {
	IdMigration        string // surrogate key
	Name               string // migration name, unique
	CreatedAt          string // date migrated or rolled back
	Statements         string // SQL statements for this migration
	RollbackStatements string // SQL statment for rolling back migration
	Status             string // update indicates it is a normal migration while rollback means this migration is rolled back
}

//  migrationsColumns holds the columns for table migrations.
var migrationsColumns = MigrationsColumns{
	IdMigration:        "id_migration",
	Name:               "name",
	CreatedAt:          "created_at",
	Statements:         "statements",
	RollbackStatements: "rollback_statements",
	Status:             "status",
}

// NewMigrationsDao creates and returns a new DAO object for table data access.
func NewMigrationsDao() *MigrationsDao {
	return &MigrationsDao{
		Group:   "default",
		Table:   "migrations",
		Columns: migrationsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MigrationsDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MigrationsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MigrationsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
