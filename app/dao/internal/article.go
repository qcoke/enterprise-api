// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ArticleDao is the manager for logic model data accessing and custom defined data operations functions management.
type ArticleDao struct {
	gmvc.M                // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      articleColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB         // DB is the raw underlying database management object.
	Table  string         // Table is the underlying table name of the DAO.
}

// ArticleColumns defines and stores column names for table article.
type articleColumns struct {
	Id        string // ID
	Local     string // zh 中文 en 英文
	Title     string // 标题
	Body      string // 文章内容
	TypeId    string // 文章分类ID
	Author    string // 作者
	CreatedAt string // 创建时间
	UpdatedAt string // 修改时间
}

// NewArticleDao creates and returns a new DAO object for table data access.
func NewArticleDao() *ArticleDao {
	columns := articleColumns{
		Id:        "id",
		Local:     "local",
		Title:     "title",
		Body:      "body",
		TypeId:    "type_id",
		Author:    "author",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
	}
	return &ArticleDao{
		C:     columns,
		M:     g.DB("default").Model("article").Safe(),
		DB:    g.DB("default"),
		Table: "article",
	}
}
